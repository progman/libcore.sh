#!/bin/bash
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
# 0.0.2
# Alexey Potehin <gnuplanet@gmail.com>, http://www.gnuplanet.ru/doc/cv
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
# check depends
function check_prog()
{
	for i in ${1};
	do
		if [ "$(command -v ${i})" == "" ];
		then
			echo "FATAL: you must install \"${i}\"...";
			return 1;
		fi
	done

	return 0;
}
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
function help()
{
	echo "example: ${0} [ DIR ]";
}
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
# general function
function main()
{
# check depends tools
	check_prog "echo git find";
	if [ "${?}" != "0" ];
	then
		return 1;
	fi


	if [ "${1}" == "-h" ] || [ "${1}" == "--h" ] || [ "${1}" == "-help" ] || [ "${1}" == "--help" ];
	then
		help "${0}";
		return 0;
	fi


	DIR='./';
	if [ "${1}" != "" ];
	then
		DIR="${1}";
	fi
	if [ ! -d "${DIR}" ];
	then
		echo "ERROR: you set invalid argument";
		return 1;
	fi


	OLD_DIR=$(pwd);


	for i in $(find "${DIR}" -type d | grep .git$);
	do
		echo "${i}";


		cd -- "${i}" &> /dev/null;
		if [ "${?}" != "0" ];
		then
			echo "ERROR1";
			exit 1;
		fi


		if [ -d objects ];
		then
			if [ "$(ls -1 objects | grep -v info | grep -v pack | wc -l)" != "0" ];
			then
				git gc --aggressive --prune=now &> /dev/null;
				if [ "${?}" != "0" ];
				then
					echo "ERROR2";
					exit 1;
				fi
			fi
		fi


		cd -- "${OLD_DIR}" &> /dev/null;
		if [ "${?}" != "0" ];
		then
			echo "ERROR3";
			exit 1;
		fi
	done


	return 0;
}
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
main "${@}";

exit "${?}";
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
