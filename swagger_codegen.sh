#!/bin/bash
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
# 1.0.0
# Alexey Potehin <gnuplanet@gmail.com>, http://www.overtask.org/doc/cv
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
# check depends
function check_prog()
{
	for i in ${1};
	do
		if [ "$(command -v ${i})" == "" ];
		then
			echo "FATAL: you must install \"${i}\"...";
			return 1;
		fi
	done

	return 0;
}
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
# codegen from https://github.com/OpenAPITools
function v2()
{
	local SWAGGER_FILE;
	SWAGGER_FILE="${1}";


	local LANG;
	LANG="${2}";


	local IMAGE;
	IMAGE='openapitools/openapi-generator-cli';


	docker run --rm "${IMAGE}" list
	if [ "${?}" != "0" ];
	then
		return 1;
	fi


	docker run --rm -v ${PWD}:/local "${IMAGE}" validate -i "/local/${SWAGGER_FILE}";
	if [ "${?}" != "0" ];
	then
		return 1;
	fi


	rm -rf out &> /dev/null < /dev/null;
	docker run --rm --user $(id -u):$(id -g) -v ${PWD}:/local "${IMAGE}" generate -i "/local/${SWAGGER_FILE}" -g "${LANG}" -o /local/out/go;
	if [ "${?}" != "0" ];
	then
		return 1;
	fi


	return 0;
}
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
# official codegen from https://editor.swagger.io/
function v1()
{
	local SWAGGER_FILE;
	SWAGGER_FILE="${1}";


	local LANG;
	LANG="${2}";


	local IMAGE;
	IMAGE='swaggerapi/swagger-codegen-cli-v3';


	docker run --rm "${IMAGE}" langs;
	if [ "${?}" != "0" ];
	then
		return 1;
	fi


	rm -rf out &> /dev/null < /dev/null;
	docker run --rm --user $(id -u):$(id -g) -v ${PWD}:/local "${IMAGE}" generate -i /local/${SWAGGER_FILE} -l "${LANG}" -o /local/out/go;
	if [ "${?}" != "0" ];
	then
		return 1;
	fi


	return 0;
}
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
function main()
{
	local SWAGGER_FILE;
	SWAGGER_FILE="";
	if [ "${1}" != "" ];
	then
		SWAGGER_FILE="${1}";
	fi


	local LANG;
	LANG='go-server';
	if [ "${2}" != "" ];
	then
		LANG="${2}";
	fi


	if [ "${SWAGGER_FILE}" == "" ] || [ "${LANG}" == "" ];
	then
		echo "example: ${0} SWAGGER_FILE [ LANG ]";
		return 1;
	fi


# check depends tools
	check_prog "docker";
	if [ "${?}" != "0" ];
	then
		return 1;
	fi


	v1 "${SWAGGER_FILE}" "${LANG}";
	if [ "${?}" != "0" ];
	then
		return 1;
	fi


	return 0;
}
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
main "${@}";

exit "${?}";
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
